System Requirements
-------------------

The current version of multi-Genome Synteny Viewer was only tested on Ubuntu 10.04 OS. The minimum requirements include: 
- Apache 1.3 or higher (http://www.apache.org)
- PHP 5.3.3 or higher (http://www.php.net/)
- MySQL 5.0 or higher (http://dev.mysql.com/)
- GD library. (http://php.net/manual/en/book.image.php)

Section I: Install Prerequisites
--------------------------------

On our Ubuntu OS, Apache, PHP, GD library, and MySQL were installed using apt-get. The commands are listed below. You can also use yum, rpm, dpkg, etc., depending on the operating system- speak to your systems administrator about it.
	shell> sudo apt-get install apache2
	shell> sudo apt-get install php5
	shell> sudo apt-get install libapache2-mod-php5
	shell> sudo apt-get install mysql-server
	shell> sudo apt-get install php5-mysql

Section II: MySQL Database Setup
--------------------------------

mGSV requires a MySQL database to store data. Listed below are steps to create a user, database, and one table within the database.

1. Log into MySQL, replace <password> with root password
	shell> mysql -u root -p <password>

2. Create 'mgsv' database
	mysql> CREATE DATABASE mgsv;

3. Create a user 'mgsv_user'
	mysql> CREATE USER 'mgsvuser'@'localhost' IDENTIFIED BY 'mgsvpass';


4. Set privileges to 'mgsv_user' to use database 
	mysql> GRANT SELECT, INSERT, CREATE, DROP ON mgsv.* TO 'mgsvuser'@'localhost';

5. Create table "userinfo" in 'mgsv' database by executing the following MySQL command
	mysql> use mgsv;
	mysql> CREATE TABLE IF NOT EXISTS `userinfo` (
		`id` int(10) NOT NULL AUTO_INCREMENT,
		`email` text NOT NULL,
		`hash` text NOT NULL,
		`synfilename` text NOT NULL,
		`annfilename` text NOT NULL,
		`url` text NOT NULL,
		`session_id` text NOT NULL,
		`annImage`   int(5) NOT NULL,
		`create_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY (`id`)
		) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3 ;

If you use different database settings, please refer to the MySQL document for instructions on how to configure the database.


Section III: Set up the multi-Genome Synteny Viewer
-----------------------------------------

1. Download the source code from the mGSV website http://cas-bioinfo.cas.unt.edu/mgsv/software.php

2. Unzip the file mgsv.v1.0.tar.gz. This should create a folder called 'mgsv'.
	shell> tar zxvf mgsv.v1.0.tar.gz

3. Move the folder 'mgsv' to DocumentRoot of Apache web server. By default, the DocumentRoot of Apache is /var/www/ (speak to the system administrator to know the exact DocumentRoot).
	shell> mv mgsv /var/www/.
	
4. Enter 'mgsv' directory and you should see another directory called 'syn'. Execute Linux commands to create and change permission for 'tmp' folder. It has to be world accessible to store the uploaded files.
	shell> cd /var/www/mgsv
	shell> mkdir tmp
	shell> chmod -R 777 tmp

5. If you have set up the MySQL database name, user and password as mentioned in STEP II, you can skip this step. However, if your MySQL setting is different, you must open the file 'settings.php' in 'mgsv/lib/' directory with any text editor you are comfortable with (e.g., pico, emacs, or vi), and modify lines 4, 5, 6, and 7 to change the variables $database_name, $database_user, $database_pass, and $database_host.

6. Under 'mgsv' folder you should see a file called 'Arial.tff'. Copy it to '/usr/share/fonts/truetype/.'. You may need the sudo privilege- talk to your system administrator if necessary.
	shell> cp Arial.ttf /usr/share/fonts/truetype/.

7. Cleanup scripts are provided to drop database synteny and annotation tables, remove entries from database table 'userinfo' and delete the folder containing image files which are older than 60 days. This task is accomplished by cron job to run the cleanup script every day. To create a cron job, use the command below:
	shell> crontab -e

At the last line of crontab, copy and paste the line below, and provide the exact path to mgsv/lib/cleanup.php
	30 04 * * * /var/www/mgsv/lib/cleanup.php

The script cleanup.php will be executed at 4:30 AM every morning.

8. mGSV uses the mail function from PHP to send email to users. Speak to your system administrator to provide required information in the PHP configuration file called 'php.ini'.

9. When installation completes, you can now open Install/index.php (i.e., http://<YOUR_SERVER_DOMAIN_NAME>/mgsv/Install/), which verifies prerequisites, database setup, and installation. YOUR_SERVER_DOMAIN_NAME refers to the domain name of your server.

Section IV: Web Service (Optional):

Web service is an optional component of mGSV. The goal of this part of the installation are to:
	1. Install Web Service using source or binary files that comes with mGSV distribution.
	2. Run or Stop Web Service as a background job
	3. Verify following artefacts are available for client or software developers to use the Web Service

		a. WSDL File (XML Based Specification for web Service)
			- Needed for developers to create helper classes and know the method signature for web service.
			- After successful installation and running this file is available at:
				http://<YOUR_SERVER_DOMAIN_NAME>:8081/MGSVService?wsdl

		b. An url where client can connect to consume the web service
			- Needed for developers to connect and use the web service.
			- Needed for client application user to connect and upload synteny data
			- Available at
				http://<YOUR_SERVER_DOMAIN_NAME>:8081/MGSVService

		c. A reference documentation that explains the services
			- Software developement reference guide for client developers.
			- Explains the service in detail
			- available at:
				http://<YOUR_SERVER_DOMAIN_NAME>/ws/client-reference.txt
		
		All three urls in (a,b,c) can be verified by visiting them using browser.
			a. XML File
			b. Small note or a blank screen
			d. Documentation file

A. Installation from Binary
	1. Check Java version, upgrade if necessary
		mGSV Web Service depends on JDK 1.6+. To check whether you have the required JDK installed execute following command
			shell> java -version
	
		If "No command 'java' found ... ", java is not installed or not configured properly. To install java
			shell> apt-get install openjdk-6-jdk
	
		If java version is less than 1.6, upgrade java using
			shell> apt-get install openjdk-6-jdk
	
	2. Run Web Service
		shell> cd /var/www/mgsv/ws
		shell> java -jar ws-server-1.0RC1-jar-with-dependencies.jar
		shell> <PRESS CTRL+Z>
		shell> bg
	
	3. Stop Web Service
		shell> ps aux | grep ws-server-1.0RC1-jar-with-dependencies.jar
		*Note the process id from the output.
		shell> kill -9 <process id>
	
	4. Configuration
		Configuration file has the format of key:value and is present in the same directory as ws-server-1.0RC1-jar-with-dependencies.jar
		shell> cd /var/www/mgsv/ws
		shell> <your editor> config.properties
	
		Configuration Options
		mgsv_upload_url=http://<YOUR_SERVER_DOMAIN_NAME>/mgsv	
		ws_publish_url=http\://<YOUR_SERVER_DOMAIN_NAME>\:8081/MGSVService
		mgsv_summary_url=http\://<YOUR_SERVER_DOMAIN_NAME>/mgsv/summary.php?session_id\=
	
		You need to stop the web service and start again if configration is changed after starting Web Service.
		You generally do not need to change configuration, as default configuration looks assumes mGSV server running
		on the same machine. It communicates over localhost and listens on port 8081 of all interfaces.

B. Installation from Source
	Web Service Server part of the code uses Standard JDK Library, which comes with the default installation of the JDK 
	for the web services functionality. Apache HTTP Components library is used to communicate with the mGSV Server.

		Apache Maven is used to manage the library dependencies and automate the build process. Overall requirement to install and run
		from sources are:

			1. JDK 1.6+ (See IV.A.1 for verification and installation)
			2. Maven 2.0+
			3. Computer connected to the internet during the build process

			* All other dependencies are downloaded automatically by Maven from Apache Central Maven Library Repository
			during the build process.
			* Default installation of Maven is very minimal, if you are using maven for the first time, it might take a
			while as it has to download its own plugins for packaging and compiling.			
	
	1. Check Maven Installation, Install if necessary
		shell> mvn --version
		
		If "No command 'mvn' found ... ", Maven is not installed or not configure properly. To install Maven
			shell> apt-get install maven2
		If version is less than 2.0, following command upgrades the existing maven.
			shell> apt-get install maven2

	2. Build the source
		Source is distributed with the main distribution under mgsv/ws folder as an archive ws-server-src.tar.gz

		a. Decompress the source archive
			shell> cd /var/www/mgsv/ws
			shell> tar -xzf ws-server-src.tar.gz

			Note: Structure of the source folder (/var/www/mgsv/ws-server-src)
				src/ 			: Source folder
				config.properties 	: Configuration file
				pom.xml			: Maven Build Configuration file
				
			Note: src/edu/unt/mgsv/MGSVService.java is the main java file that contains the Web Service
			implementation. Code is extensively documented to incoperate changes. The Archetecture guide
			has further information about inner working of this file.		


		b. Make binary from source using Maven
			shell> cd /var/www/mgsv/ws-server-src
			shell> mvn package

			* This command downloads required dependencies and creates a executable 
			binary, a java jar file, (ws-server-1.0RC1-jar-with-dependencies.jar) under folder 'target'. This
			file is stand alone binary and contains all the necessary libraries. Only requirement to run this
			binary would be a JDK 1.6+

		c. Copy binary file and a configuration folder to ws directory
			shell> cd /var/www/mgsv/ws-server-src/target/
			* Following step will overwrite the binary file that comes with default distribution.
			shell> cp ws-server-1.0RC1-jar-with-dependencies.jar /var/www/mgsv/ws/
			shell> cd ..
			* Skip following step if you have already run from binary and made changes to conf.properties
			shell> cp config.properties /var/www/mgsv/ws/

		d. Follow IV.A ('Installation from binary' to run the binary file just produced).
			

Section V: Additional notes:

1. For troubleshooting, please use the contact details at http://cas-bioinfo.cas.unt.edu/mgsv/mgsvcontact.php
2. Refer to the ARCHITECTURE.txt file to understand the architecture of mGSV.

